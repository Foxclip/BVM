# Mul
#     Add
#         Add
#             Inp 0
#             Inp 1
#         Inp 2
#     Add
#         Inp 0
#         Inp 2 # Inp 2
# Mul
#    55
#    87

# Cpy
# Add
#     1
#     2

# Mul
#     Cpy -1
#     Add 2 3

# Mul
#     Cpy -2 0
#     Add 2 3

# Mul
#     3
#     Add
#         2
#         3

# infinite loop with parallel execution
# Cpy 2
# Cpy -2

# for loop attempt
# 0
# Node
#     Cpy
#         -1
#         8
#     Node
#         Add
#             Cpy
#                 -6
#                 0
#             1
#         If
#             Cmp
#                 Cpy
#                     -3
#                     10
#             Del
#                 2


# node test
# Node
#     Add
#         2
#         3
#     Del
#         0

# del test
# Add
#     2
#     3
# Del
#     0
# Mul
#     5
#     5

# del test
# Node
#     Add
#         1
#         -1
#     1
# 2
# 3
# Del
#     -5
# 4
# 5
# Del
#     -1
# 6
# 7
# Del
#     0
# 8
# 9
# Del
#     1
# 10
# 11
# Del
#     3
# 12
# 13
# 14
# 15

# cpy test
# 5
# Cpy
#     -1
#     4
# 6
# 7

# label test
# Add :AddLabel
#     AddLabel
#     3

# label test
# 0
# 1
# 2
# 3
# 4 :DelThis
# 5 :CpyThis
# 6
# Del
#     DelThis
# 7
# Cpy
#     CpyThis
#     -2
# 8
# 9

# cmp test
# If
#     Cmp
#         Add
#             2
#             3
#         6
#     Add
#         2
#         3
#     Add
#         5
#         6

# for loop attempt
# 0
# Node
#     Cpy
#         -2
#         11
#     Cpy
#         -1
#         9
#     Add
#         Cpy
#             -4
#             0
#         1

# list test
# list
#     end
# list
#     list
#         0
#         add
#             11
#             22
#         2
#         list
#             55
#             66
#             77
#             end
#         3
#         4
#         end
#     list
#         end
#     list
#         1
#         end
#     end
# list
#     end

# for loop
# 0
# list
#     cpy
#         -1
#         19
#     add
#         cpy
#             -3
#             0
#         1
#     if
#         cmp
#             cpy
#                 -3
#                 0
#             10
#         del
#             3
#         del
#             0
#     end

# new ops test
# sub
#     10
#     3
# div
#     10
#     3
# mod
#     10
#     3
# pow
#     10
#     3

# shifting pointers
# zero: 0
# 1
# cpy
#     zero
#     dst2
# 2
# cpy
#     ten
#     eight
# three: 3
# del
#     three
# 4
# 5
# six: 6
# cpy
#     zero
#     0
# cpy
#     six
#     0
# 7
# eight: 8
# 9
# ten: 10
# 11
# cpy
#     zero
#     dst2: dst2

# 0 :zero
# cpy
#     zero
#     dst
# 1 :dst
# 2
# 3
# 4 :four
# cpy
#     four
#     nine
# 5
# 6
# 7
# 8
# 9 :nine
# 10

# 0 :zero
# cpy
#     five
#     0
# 2
# cpy
#     zero
#     0
# 4
# 5 :five

# end file label test
# cpy
#     zero
#     endf
# zero: 0
# 1
# 2
# 3
# endf:

# for loop with new labels
# list
#     list
#         0
#         cur: end
#     lst: list
#         cpy
#             lst
#             end2
#         inc: add
#                 cpy
#                     sub
#                         cur
#                         1
#                     0
#                 1
#         if
#             gt
#                 cpy
#                     inc
#                     0
#                 9
#             del
#                 add
#                     end1
#                     1
#             del
#                 0
#         end1: end
#     end2: end

# p instruction inserting test
# rec0: rec0
# zero: 0
# p
#     1
# 1
# zero
# rec1: rec1
# somelabel
# 2
# three: 3
# rec2: rec2
# 4
# p
#     2
# somelabel: three
# rec3: rec3

# pointer type test
# begin:
# endp
# p
#     1
# 5
# endp2
# 6
# endp: 7
# 8
# endp2: 9
# 10

# pointer shift test
# add
#     p
#         2
#     1
# 5
# 6
# 7
# 8
# 9

# another pointer shift test
# six
# list
#     5
#     6
#     7
#     six   
#     end
# 5
# six: 6
# 7

# if pointer shift test
# if
#     add
#         0
#         1
#     list
#         six
#         eight
#         end
#     list
#         six
#         eight
#         nine
#         end
# 5
# six: 6
# 7
# eight: 8
# nine: 9

#
# inc: add
#     0
#     1
# cpy
#     inc
#     0

# list
#     zero: 0
#     lst: list
#         cpy
#             zero
#             lst
#         zero    
#         end
#     end

# infinite loop
# list
#     list
#         0
#         cur: end
#     lst: list
#         cpy
#             lst
#             end2
#         inc: add
#                 cpy
#                     sub
#                         cur
#                         1
#                     0
#                 1
#         end
#     end2: end

# list pointer test
# list
#     1
#     endl: end
# list
#     cpy
#         endl
#         0
#     end

# deleting pointer destination test
# one: 1
# two: 2
# three: 3
# one
# two
# three
# del
#     two

# for loop from 0 to 9
# list
#     list
#         0
#         cur: end
#     lst: list
#         cpy
#             lst
#             end2
#         inc: add
#                 cpy
#                     sub
#                         cur
#                         1
#                     0
#                 1
#         if
#             cmp
#                 cpy
#                     inc
#                     0
#                 10
#             list
#                 del
#                     add
#                         end1
#                         1
#                 del
#                     lst
#                 end
#             del
#                 0
#         end1: end
#     end2: end

# repl test
# one: 1
# 2
# 3
# four: 4
# repl
#     3
#     cpy
#         repl_p
#         0
# 6
# 7
# repl_p: repl
#     four
#     55
# 8
# 9

# another repl test
# add_p: add
#     5
#     5
# repl
#     add_p
#     cpy
#         mul_p
#         0
# mul_p: mul
#     5
#     5
# repl
#     lst2
#     cpy
#         lst1
#         0
# lst1: list
#     1
#     two: 2
#     three: 3
#     end
# lst2: list
#     5
#     6
#     7
#     end
# repl
#     two
#     3

# factorial
# list
#     input: 5
#     lst: list
#         if
#             cmp
#                 cpy
#                     input
#                     0
#                 1
#             cpy
#                 lst
#                 endl
#         mul
#             cpy 
#                 input
#                 0
#             list
#                 cpy
#                     lst
#                     0
#                 end
#         end
#     endl: end

# mul_p: mul
#     input: 5
#     if
#         cmp
#             input
#             1
#         1
#         list
#             cpy
#                 mul_p
#                 0
#             repl
#                 input
#                 # input - 1                

# input: 5
# list
#     next: sub
#         cpy
#             input
#             1
#         1
#     repl
#         input
#         next
#     end

# new repl test
# repl
#     ff
#     5
# 1
# 2
# three: 3
# repl
#     three
#     ff: 55

# replp test
# 1 9 4 6 -5 9
# one: 1
# 2
# three: 3
# 4
# replp
#     0
#     repl_p
# 6
# 7
# repl_p: replp
#     three
#     one
# 8
# 9

# another replp test
# add_p: add
#     5
#     5
# replp
#     add_p
#     mul_p
# mul_p: mul
#     5
#     5
# replp
#     lst2
#     lst1
# lst1: list
#     1
#     two: 2
#     three: 3
#     end
# lst2: list
#     5
#     6
#     7
#     end
# replp
#     two
#     three

# get test
# 1
# get
#     add_p
# two: 2
# three: 3
# add_p: add
#     get
#         four
#     get
#         two
# four: 4
# 5
# get
#     add_p
# 6
# 7
# 8

# ins test
# 1
# two: 2
# 3
# ins_p: ins
#     two
#     55
# ins
#     ins_p
#     33
# ins
#     1
#     -2
# ins
#     0
#     -1
# ins
#     2
#     99
# 4
# 5
# 6

# another ins test
# 1
# two: 2
# 3
# ins
#     two
#     add
#         2
#         3
# ins_p: ins
#     -1
#     add
#         5
#         6
# ins
#     ins_p
#     ins
#         2
#         mul
#             2
#             2

# factorial
# lst: list
#     replp
#         replthis
#         lst
#     sub_p: sub
#         get
#             arg
#         1
#     replp
#         add
#             before_replthis
#             17
#         sub_p
#     del
#         sub_p
#     mul_p: mul
#         arg: 5
#         if
#             cmp
#                 get
#                     arg
#                 1
#             before_replthis: 1
#             replthis: 0
#     end

# div
#     5
#     0
# div
#     5.0f
#     0.0f
# div
#     5.0
#     0.0
# div
#     -5.0f
#     0.0
# div
#     5.0
#     0.0f
# div
#     0
#     0
# div
#     0.0f
#     0.0f
# div
#     0.0
#     0.0

# inf
# -inf
# nan
# -nan
# inff
# -inff
# nanf
# -nanf
# -nan(ind)

# label2: 0
# label3
# 1
# 2
# label1
# 3
# 4
# label1: 5
# label2
# 6
# 7
# label3: 8

# add
#     inf
#     -inf
# add
#     inf
#     inf
# sub
#     inf
#     inf
# mul
#     inf
#     inf
# mul
#     inf
#     -inf
# mul
#     inf
#     0
# div
#     inf
#     inf
# mod
#     inf
#     5
# mod
#     5
#     0
# mod
#     inf
#     0
# pow
#     0
#     0
# pow
#     -1
#     0.5
# pow
#     1
#     inf
# pow
#     inf
#     0

# cmp
#     0.5
#     0.5
# cmp
#     0.1
#     0.3
# cmp
#     inf
#     inf
# cmp
#     inf
#     -inf
# cmp
#     inf
#     1
# cmp
#     nan
#     1
# cmp
#     1
#     nan
# cmp
#     nan
#     nan
# cmp
#     nan
#     -nan

# mod
#     nan
#     nan
# mod
#     -nan
#     5
# mod
#     nanf
#     -nan
# pow
#     5.5f
#     nan
# pow
#     nan
#     0
# pow
#     -inff
#     nanf
# pow
#     -nanf
#     5
# pow
#     1
#     nan

# log
#     -5
# log
#     -5.0
# log2
#     -5.0f
# log2
#     -5
# sin
#     inf
# sin
#     nan
# cos
#     inf
# cos
#     nanf
# tan
#     inf
# tan
#     -inf
# tan
#     1.57079632679
# asin
#     -5
# acos
#     5.0f
# atan
#     inf
# atan2
#     inf
#     1
# atan2
#     1
#     inf
# atan2
#     nan
#     0.0

# 0 :zero
# one
# 1 :one
# 2
# five
# 3
# 4
# 5 :five
# five
# zero

# floor
#     0
# floor
#     1.5f
# floor
#     2.9
# floor
#     -2.9
# ceil
#     0
# ceil
#     1.5
# ceil
#     2.9f
# ceil
#     -2.9f
# floor
#     inf
# floor
#     nanf
# ceil
#     inff
# ceil
#     nan

# and
#     0
#     0
# and
#     1
#     0
# and
#     -1
#     5
# and
#     inf
#     1
# and
#     nan
#     nan
# or
#     5.5
#     1.1f
# or
#     5
#     0
# or
#     0.0
#     0
# xor
#     0
#     0
# xor
#     0
#     1
# xor
#     1
#     0
# xor
#     1
#     1
# not
#     0
# not
#     1
# not
#     5
# not
#     -5
# not
#     nanf

# sys
#     0
#     "Hello,"
# sys
#     0
#     32
# sys
#     0
#     "World!"
# sys
#     0
#     10

# 0
# "abc"
# 1
# "string"
# 2
# "Hello, World!"
# 3
# "Line 1
# Line 2"
# 4

# "\n"
# "\r"
# "\t"
# "\\"
# "\""
# "a\\b\\c"
# "a\nb\nc"
# "\"abc\""

# 0
# 1
# print
#     "Hello, World!\n"
# 2
# 3


# add
#     2
#     add
#         1
#         2
# add
#     5
#     add
#         3
#         3

# 0
# list
#     cpy
#         -2
#         21
#     add
#         cpy
#             -4
#             0
#         1
#     if
#         cmp
#             cpy
#                 -4
#                 0
#             10
#         list
#             del
#                 5
#             del
#                 -4
#             end
#         del
#             0
#     end

# 5 :five
# cpy
#     five
#     cpy_p
# 6 :six
# cpy :cpy_p
#     six
#     add
#         end_p
#         1
# 7 :seven
# cpy
#     seven
#     0 :end_p

# 1
# 2
# 3 :three
# 4
# 5 :five
# cpy
#     three
#     five

# 1 :one
# 2 :two
# 3 :three
# cpy
#     two
#     cpy_p
# cpy
#     two
#     cpy_p :cpy_p
# cpy
#     one
#     0

# 1 :one
# 2 :two
# 3 :three
# cpy :cpy_p
#     one
#     cpy_p
# cpy
#     two
#     cpy_p
# cpy
#     three
#     cpy_p

# 1
# 2 :two
# cpy
#     two
#     four
# 3
# 4 :four

# 5 :five
# cpy
#     five
#     sub
#         five
#         1
# 6

# 1
# 2 :two
# 3
# cpy
#     two
#     add
#         end_p
#         1 :end_p

# 1
# 2
# 3
# add
#     1p
#     1
# 4
# 5
# 6

# 6 :six
# cpy :cpy_p
#     six
#     add
#         end_p
#         1
# 7 :seven
# cpy
#     seven
#     0 :end_p

# 5 :five
# cpy
#     five
#     cpy_p
# 6 :six
# cpy :cpy_p
#     six
#     add
#         end_p
#         1
# 7 :seven
# cpy
#     seven
#     0 :end_p

# 5 :five
# cpy
#     five
#     sub
#         five
#         1
# 6

# 1
# 2 :two
# 3
# del
#     two

# add
#     5
#     6
# del
#     -4

# 4
# add
#     5
#     6
# del
#     -4

# 1 :one
# 2 :two
# 3 :three
# cpy :cpy_p
#     one
#     cpy_p
# cpy
#     two
#     cpy_p
# cpy
#     three
#     cpy_p

# 5 :five
# cpy
#     five
#     sub
#         five
#         1
# 6

# add
#     two
#     1
# del
#     0
# 1
# 2 :two
# 3

# list
# end

# list
#     1
#     2
#     3
# end

# 10
# 11
# 12
# list :list_p
#     1
#     2
#     3
# end
# 20
# 21
# 22
# set
#     list_p
#     5
# 30
# 31
# 32

# 1
# 2 :two
# 3
# get
#     two

# 1
# 2 :two
# 3
# two :two_p
# 4
# get
#     two_p
# 5

# list :lst_p
#     1
#     -1p
#     3
# end
# get
#     lst_p

# 55 :ff
# list :lst_p
#     2p
#     ff
#     -2p
# end
# get
#     lst_p

# 3p
# 3p
# 3p
# get :get_p
#     lst_p
# 3
# 4
# list :lst_p
#     5
#     6
# end
# 7

# add
#     get_p
#     1
# get :get_p
#     lst_p
# 3
# 4
# list :lst_p
#     5
#     6
# end
# 7

# 4p list 5 end 3 list end

# 1
# get_p
# add
#     get_p
#     1
# add
#     get_p
#     2
# 2
# get :get_p
#     lst_p
# 3
# 4
# list :lst_p
#     5
#     6
# end
# 7


# add
#     three
#     1
# 2
# 3 :three
# 4

# 1 :one
# 2 :two
# 3 :three
# cpy :cpy_p
#     one
#     cpy_p
# cpy
#     two
#     cpy_p
# cpy
#     three
#     cpy_p

# 1
# 2 :two
# 3
# get
#     two

# 4
# add
#     5
#     6
# del
#     -4

# add
#     5
#     6
# del
#     -2

# 1
# 2 :two
# 3
# two :two_p
# 4
# get
#     two_p
# 5

# 5 :five
# cpy
#     five
#     sub
#         five
#         1
# 6

# add
#     2p
#     1
# 5
# 6
# 7
# 8
# 9

# 5 :five
# cpy
#     five
#     sub
#         five
#         1
# 6

# 1
# 2 :two
# 3
# set
#     two
#     55


# 1
# add :add_p
#     2
#     3
# 3
# set
#     add_p
#     add
#         5
#         6

# 1
# 2 :two
# 3
# set
#     two
#     11
# set
#     two
#     22

# 1
# get_p
# add
#     get_p
#     1
# add
#     get_p
#     2
# 2
# get :get_p
#     lst_p
# 3
# 4
# list :lst_p
#     5
#     6
# end
# 7

# get :get1
#     get1
# get :get2
#     get1

# cpy :cpy1
#     cpy2
#     cpy1
# cpy :cpy2
#     cpy1
#     cpy2

# seq
#     add
#         2
#         3
#     add
#         5
#         6
# end
# add
#     11
#     22

# seq
#     add
#         2
#         3
#     seq
#         add
#             5
#             6
#         add
#             3
#             4
#     end
#     add
#         11
#         22
# end

# seq
#     seq
#         add
#             2
#             3
#     end
#     add
#         5
#         6
# end

# seq
#     add
#         2
#         3
#     add
#         5
#         6
#     list
#         add
#             2
#             3
#         add
#             5
#             6
#     end
#     add
#         11
#         22
# end

# seq
#     list
#     end
# end

# 1
# 2 :two
# 3
# seq
#     set
#         eleven
#         22
#     set
#         two
#         11 :eleven
# end

# seq
#     list
#         seq
#             add
#                 1
#                 2
#             add
#                 3
#                 4
#         end
#         seq
#             add
#                 5
#                 6
#             add
#                 7
#                 8
#         end
#     end
# end

# list seq 3 7 end seq 11 15 end end

# seq
#     add
#         1
#         2
# end
# seq
# end

# list
#     list
#     end
# end

# seq
#     seq
#         add
#             2
#             3
#     end
#     add
#         5
#         6
# end

# 1 :one
# 2 :two
# 3 :three
# 4 :four
# seq
#     seq
#         seq
#             get one
#         end
#         get two
#     end
#     get three
# end
# get four

# seq 
#     seq
#         seq 
#             1
#         end 
#         add
#             2
#             3
#     end 
#     add
#         5
#         6
# end

# 1
# 2 :two
# 3
# ins
#     ff
#     add
#         2
#         3
# ins
#     two
#     55 :ff

# :end_p
# 1
# 2
# 3
# ins
#     end_p
#     55
# ins
#     end_p
#     66

# :end_p
# seq
#     ins
#         end_p
#         1
#     ins
#         end_p
#         2
# end

# :end_p
# list
#     seq
#         ins
#             end_p
#             0
#         ins
#             end_p
#             0
#         ins
#             end_p
#             0
#         ins
#             end_p
#             0
#         ins
#             end_p
#             0
#         ins
#             end_p
#             0
#     end
#     seq
#         ins
#             end_p
#             1
#         ins
#             end_p
#             2
#         list
#             ins
#                 end_p
#                 3
#             ins
#                 end_p
#                 4
#         end
#         ins
#             end_p
#             5
#     end
# end

# seq
#     list
#         add
#             2
#             3
#     end
#     add
#         5
#         6
# end

# list
#     seq
#     end
# end

# :end_p
# list
#     seq
#         ins end_p 0
#         ins end_p 0
#         ins end_p 0
#         ins end_p 0
#         ins end_p 0
#         ins end_p 0
#         ins end_p 0
#         ins end_p 0
#     end
#     seq
#         seq
#             seq
#                 seq
#                     ins end_p 1
#                 end
#                 ins end_p 2
#             end
#             ins end_p 3
#         end
#         ins end_p 4
#     end
# end

# :end_p
# seq
#     list
#         seq
#             add :add1
#                 1
#                 2
#             cpy add1 end_p
#             add :add2
#                 3
#                 4
#             cpy add2 end_p
#         end
#         seq
#             add :add3
#                 5
#                 6
#             cpy add3 end_p
#             add :add4
#                 7
#                 8
#             cpy add4 end_p
#         end
#     end
# end

# 1
# 2 :two
# 3
# repl
#     two
#     ff
# 55 :ff

# 1
# 2 :two
# 3
# list :lst_p
#     5
#     6
#     7
# end
# repl
#     two
#     lst_p

# seq
#     1 :one
#     2
#     3 :three
#     4
#     repl
#         -1
#         repl_p
#     6
#     7
#     repl :repl_p
#         three
#         one
#     8
#     9
# end

# 1 2 3 4 repl -3p -6p

# 4
# add
#     5
#     6
# del
#     -4

# add
#     0
#     0
# add
#     1
#     1

# 1
# 2 :two
# 3
# ins
#     ff
#     add
#         2
#         3
# ins
#     two
#     55 :ff

# add 1 1
# q
#     list
#         add 2 3
#         add 3 4
#     end
# add 5 6

# list
#     1
#     q add 2 3
#     3
# end

# seq
#     1
#     q add 2 3
#     3
# end

# 1
# 2 :two
# 3
# ins
#     ff
#     q add 2 3
# ins
#     two
#     55 :ff

# 1
# 2 :two
# 3
# ins
#     two
#     list
#         11
#         22
#         33
#     end

# 1
# 2 :two
# 3
# ins
#     ff
#     add 2 3
# ins
#     two
#     55 :ff

# :end_p
# 1
# 2 :two
# 3
# ins
#     two
#     list
#         11
#         ins
#             end_p
#             200
#         33
#     end
# ins
#     end_p
#     100

# 1
# add :add_p
#     2
#     3
# 3
# set
#     add_p
#     add
#         5
#         6

# 1
# 2 :two
# 3
# set
#     two
#     list
#         11
#         22
#         33
#     end
# set
#     two
#     55

# add
#     2
#     3
# add
#     5
#     6

# 1
# 2 :two
# 3
# set
#     two
#     11
# set
#     two
#     22

get :get1
    get2
get :get2
    get1
